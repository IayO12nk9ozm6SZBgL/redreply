name: Build Test

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  test:
    name: build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            rid: linux-x64
            postfix: ""

          # Linux aarch64
          - os: ubuntu-latest
            target: aarch64-linux-gnu-gcc
            rid: linux-aarch64
            postfix: ""

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rid: win-x64
            postfix: ".exe"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: startsWith(matrix.os, 'ubuntu-') 
        run: | 
          sudo apt update
          sudo apt install -y musl-tools
      - name: Build executable
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Pack binary (Ubuntu and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release/
          zip -r ${{ env.BIN_NAME }}-${{ matrix.rid }}-${{ steps.tag.outputs.tag }}.zip ${{ env.BIN_NAME }}${{ matrix.postfix }}
  
      - name: Pack binary (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -CompressionLevel Optimal -Force -Path target/${{ matrix.target }}/release/${{ env.BIN_NAME }}${{ matrix.postfix }} -DestinationPath target/${{ matrix.target }}/release/${{ env.BIN_NAME }}-${{ matrix.rid }}-${{ steps.tag.outputs.tag }}.zip
        shell: pwsh

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: compile-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ env.BIN_NAME }}-${{ matrix.rid }}-${{ steps.tag.outputs.tag }}.zip
   
